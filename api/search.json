[{"title":"重要の事","url":"/posts/36215/","content":"\n![image-20210108181624149](C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210108181624149.png)\n\n今后我会以让你幸福作为我的人生意义!\n\n​                                                                                     to OXX\n\n","categories":[],"tags":["MOST"]},{"title":"搭建博客过程记录","url":"/posts/22164/","content":"\n# 博客环境搭建\n\n> 本文系统环境信息：Win10专业版，64位（10.0 版本18362）\n>\n> Node.js：12.13.0 Git：2.24.0\n\n## 下载Git和Node.js\n\n###  Node.js的安装与配置\n\n首先去[Node.js官网](https://nodejs.org/en/download/) 下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。\n\n![Node.js下载以及版本的选择](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZWpzLTAucG5n?x-oss-process=image/format,png)\n\n下载好与电脑系统对应的安装程序后，开始安装流程：\n\n1. 打开下载好的Node.js安装程序，点击Next，进行下一步的安装；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS0xLnBuZw?x-oss-process=image/format,png)\n\n将\"I accept the terms in the License Agreement\"前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS0yLnBuZw?x-oss-process=image/format,png)\n\n选择Node.js安装程序的安装位置，在这里我以\"C:\\Program Files\\nodejs\"为例，点击Next，进入下一步操作；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS0zLnBuZw?x-oss-process=image/format,png)\n\n选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击Next，进入下一步操作；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS00LnBuZw?x-oss-process=image/format,png)\n\n这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C/C++等，点击Next，进入下一步；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS01LnBuZw?x-oss-process=image/format,png)\n\n点击\"Install\"，等待Node.js安装完成；\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS02LnBuZw?x-oss-process=image/format,png)\n\n当看到下图所显示的情况，Node.js就成功安装完毕。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS03LnBuZw?x-oss-process=image/format,png)\n\n验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS04LnBuZw?x-oss-process=image/format,png)\n\n如果执行`node -v`报错的话，那么手动将Node.js的安装路径添加到环境变量中，右击点击我的电脑 ->属性 -> 高级系统设置 -> 环境变量，在系统变量下找到名为path的变量名，如下图：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcxOTExMDcucG5n?x-oss-process=image/format,png)\n\n选中path，或者双击，然后将你node.js的安装路径放在path变量值的最后面，如果添加之前path值最后有 英文的分号，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开cmd（Win+R），执行`node -v`，看是否成功。\n\n1. 设置npm的镜像源：\n\n```bash\n# 查看npm的配置\nnpm config list\n# 默认源\nnpm config set registry https://registry.npmjs.org\n# 临时改变镜像源\nnpm --registry=https://registry.npm.taobao.org\n# 永久设置为淘宝镜像源\nnpm config set registry https://registry.npm.taobao.org\n# 另一种方式，编辑 ~/.npmrc 加入下面内容\nregistry = https://registry.npm.taobao.org\n12345678910\n```\n\n设置npm的内置路径——>全局模块路径和缓存路径（*可选*）\n\n如果不改变内置路径也可，除非你的C盘空间足够bigger，这一步可以略过，不改变的话，它的路径在：\n\n> 此处参考：[jyjin的node环境变量配置，npm环境变量配置](https://blog.csdn.net/jianleking/article/details/79130667)\n\n- npm包全局目录：`C:/Users/[username]/AppData/Roaming/npm/node_modules`\n- npm包全局命令目录：`C:/Users/[username]/AppData/Roaming/npm`\n- npm实际去找全局命令的目录：`C:/Users/[username]/.npmrc` 文件内容的`prefix`值\n- npm包全局cache目录：`C:/Users/[username]/.npmrc` 文件内容的`cache`值\n\n首先在你Node.js的安装位置，新建两个文件夹，`node_global`和`node_cache`，我的路径是：\n\n```\nC:\\Program Files\\nodejs\\node_global\nC:\\Program Files\\nodejs\\node_cache\n12\n```\n\n然后分别执行的命令就是：\n\n```bash\nnpm config set prefix\"C:\\Program Files\\nodejs\\node_global\"\nnpm config set cache \"C:\\Program Files\\nodejs\\node_cache\"\n12\n```\n\n然后在配置环境变量，右击我的电脑 ->属性 -> 高级系统设置 -> 环境变量同样的位置，在用户变量的地方，找到path变量进行修改，修改值如下图：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS0xMS5wbmc?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvbm9kZS0xMi5wbmc?x-oss-process=image/format,png)\n\n然后就大功告成了，Node.js就安装完毕了，下面开始Git安装。👇👇👇\n\n### Git的安装与配置\n\n首先就是去[Git官网](https://git-scm.com/)下载Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcxOTM3MzcucG5n?x-oss-process=image/format,png)\n\n1. 下载好Git的安装包，开始安装，打开安装包，出现如图的界面，点击Next：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTEucG5n?x-oss-process=image/format,png)\n\n1. 选择你要安装的位置，我以C盘为例，路径为图中所示，安装到其他位置的话，点击Browse，选择你要安装的位置，然后点击Next，进入下一步：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTIucG5n?x-oss-process=image/format,png)\n\n1. 选择你是否创建桌面快捷放方式，其他默认即可，点击Next，进入下一步：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTMucG5n?x-oss-process=image/format,png)\n\n1. 是否将Git快捷方式的目录加入开是菜单栏\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTQucG5n?x-oss-process=image/format,png)\n\n1. 这个是选择文本编辑器的方式，默认是Vim，也可以选择其他的方式，自主选择，在这里我选择的Vim默认方式。选择好文本编辑器的方式后，点击Next，进入下一个流程：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTUucG5n?x-oss-process=image/format,png)\n\n1. 选择安装 Git 时对环境变量PATH的影响，第一种影响较小，第三种会影响到Windows的自带工具，默认勾选中间项，建议不要修改，直接点击 “Next” 继续安装：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTYucG5n?x-oss-process=image/format,png)\n\n1. 选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 “Next” 继续安装：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTcucG5n?x-oss-process=image/format,png)\n\n1. 选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 “Next” 继续安装：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTgucG5n?x-oss-process=image/format,png)\n\n1. 选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 “Next” 继续安装：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTkucG5n?x-oss-process=image/format,png)\n\n1. 最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 “Install” 即可完成安装：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTEwLnBuZw?x-oss-process=image/format,png)\n\n1. 安装完成\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTExLnBuZw?x-oss-process=image/format,png)\n\n1. 回到桌面，点击鼠标右键，会出现两个选项`Git GUI Here`和`Git Bash Here`，在打开Cmd(Win+R)，分别输入`git`和`git --version`，如果出现如下图的情况，即安装成功！\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTEyLnBuZw?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvZ2l0LTEzLnBuZw?x-oss-process=image/format,png)\n\n# Github注册以及Github Pages创建\n\n1. 打开Github[官网首页](https://github.com/)，点击右上角的**Sign Up** ，然后在出现的页面上填写你的相关信息，进行注册：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMDM0MzIucG5n?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMDQ2MzkucG5n?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMDQ5NTUucG5n?x-oss-process=image/format,png)\n\n验证完成后，点击Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择Free，下方的两个选项可选可不选，点击**Continue**继续：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTE0MzEucG5n?x-oss-process=image/format,png)\n\n这时Github会给你发一封邮件，验证一下即可，验证过后才可以创建库。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTI3MjEucG5n?x-oss-process=image/format,png)\n\n验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：`<用户名>.github.io`，`Description`为描述仓库，自定义写，填写必要的描述，也可不填。勾选`Initialize this repository with a README`点击`Creat repository`进行创建。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTI1MzgucG5n?x-oss-process=image/format,png)\n\n然后就会出现如图所示的界面，即仓库创建成功！\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTMzMjEucG5n?x-oss-process=image/format,png)\n\n我们来测试一下，点击`Create new file`，出现如下界面，然后命名文件名为`index.html`，在填写如图的内容，再点击`Commit new file`，即创建成功，然后打开一个新的网页，输入网址`https://<你的用户名>.github.io`，即可以看见一个新的网页，其中的内容就是你写的内容。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTQwMjkucG5n?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTM5NTcucG5n?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTQ0NTAucG5n?x-oss-process=image/format,png)\n\n至此，Github的注册以及Github Pages已经创建完成了。\n\n# 配置Git用户名和邮箱\n\n在桌面点击鼠标右键，点击`Git Bash Here`，会出现一个界面如下图所示：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTUxMTgucG5n?x-oss-process=image/format,png)\n\n然后分别输入下面的两个命令，并回车：\n\n```bash\ngit config --global user.name \"此处填写你注册时的用户名\"\ngit config --global user.email \"此处填写你注册时的邮箱\"\n# 一般只要不报错，可以跳过下面寻找.gitconfig文件\n123\n```\n\n然后找到`.gitconfig`文件，文件存放位置在`C:/Users/[username]/.gitconfig`（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功！\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjAwMTYucG5n?x-oss-process=image/format,png)\n\n# 本地安装hexo静态博客框架以及发布到Github Pages\n\n1. 首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为blogtest的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择`Git Bash Here`，然后依次输入如下命令，：\n\n```bash\n# hexo框架的安装\nnpm install -g hexo-cli\n# 等上一个命令完成后，在输入下面的命令\nhexo init <新建文件夹的名称>  #初始化文件夹\ncd <新建文件夹的名称>\nnpm install  # 安装博客所需要的依赖文件\n123456\n```\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjExMjkucG5n?x-oss-process=image/format,png)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjExNDQucG5n?x-oss-process=image/format,png)\n\n等待运行完成，此时文件夹中多了许多文件。\n**注意**：**后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。**\n此时Hexo框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :\n\n```bash\nhexo g\nhexo s\n12\n```\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjExNTcucG5n?x-oss-process=image/format,png)\n\n浏览器中打开http://locakhost:4000或者127.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjEyMDYucG5n?x-oss-process=image/format,png)\n\n##  本地博客发布到Github Pages\n\n之前的步骤中，我们已经完成了对Github账户的注册以及Github Pages的创建，接下来是将本地博客发布至Github Pages。\n\n1. 首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：\n\n```bash\nnpm install hexo-deployer-git --save\n1\n```\n\n1. 紧接着，将本地目录与GitHub关联起来，输入下面的命令行：\n\n```bash\nssh-keygen -t rsa -C \"你的邮箱地址\"\n1\n```\n\n输入后一直回车，然后在`C:/Users/[username]`目录下找到名为`.ssh`的文件夹， 文件夹内会有两个文件，一个`id_rsa.pub`一个`id_rsa`，用文本编辑器打开`id_rsa.pub`，复制里面的的内容。 然后打开Github，点击右上角的头像 **Settings** 选择**SSH and GPG keys**\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjI3NDYucG5n?x-oss-process=image/format,png)\n\n点击**New SSH key** 将之前复制的内容粘帖到Key的框中。 上面的**Title**可以随意，点击**Add SSH key** 完成添加。\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjMwNDkucG5n?x-oss-process=image/format,png)\n\n然后回到Git的命令行界面，测试一下是否与GitHub连接成功。输入下面的命令行：\n\n```bash\nssh -T git@github.com\n1\n```\n\n点击回车，然后会出现一个询问内容，输入`yes`，回车，会出现一段内容，`Hi <account name>! You've successfully authenticated, but GitHub doesnot provide shell access.`。 说明连接成功。此处这个`<account name>`应该是你Github的用户名。\n\n1. 进入博客站点目录，用文本编辑器打开`_config.yml`，这个`_config.yml`是博客的配置文件，在以后的博客修改，如个性化修改，博客SEO优化等都会使用到，修改如下图的几个地方：\n\n```yml\ntitle: 你的博客名\nsubtitle: 博客的副标题，有些主题支持\ndescription: 博客描述\nkeywords: 博客关键词\nauthor: 作者，在文章中显示\nlanguage: 博客语言语种   \ntimezone: 时区\n1234567\n```\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjQxMzgucG5n?x-oss-process=image/format,png)\n\n滑到文件最底部，有一个deploy，在deploy下面添加一个repo项 ，一个branch项。填入如下代码，并如下图所示：\n\n```yml\ntype: git\nrepo: git@github.com:Github用户名/github用户名.github.io.git  \n//也可使用https地址，如：https://github.com/Github用户名/Github用户名.github.io.git\t\t\t\nbranch: master\n1234\n```\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMjQxNTEucG5n?x-oss-process=image/format,png)\n\n1. 最后就是生成页面，并发布至Github Pages，执行如下命令：\n\n```bash\n# Hexo会根据配置文件渲染出一套静态页面\nhexo g\n# 将上一步渲染出的一系列文件上传至至Github Pages\nhexo d\n# 也可以直接输入此命令，直接完成渲染和上传\nhexo g -d\n123456\n```\n\n上传完成后，在浏览器中打开**https://<用户名>.github.io**，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。","categories":[],"tags":["首次"]}]